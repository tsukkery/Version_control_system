name: Docker Image Publish

on:
  workflow_call:
    inputs:
      update_tag:
        type: string
        required: true
        description: "update version tag"
        
env:
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  docker-push:
    runs-on: ubuntu-latest
    steps:
      - name: Ð¡heckout on [${{env.RELEASE_BRANCH}}]
        uses: actions/checkout@v3

      - name: Debug
        run: echo "${{ inputs.update_tag }}"

      - name: Release info
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'Release created'
            })

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USER }}/${{ env.REPO_NAME }}:v${{ inputs.update_tag }}

      - name: Update Docker Hub description via API
        run: |
          DESCRIPTION=$(cat README.md | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
          JSON_DATA='{"full_description": "'"$DESCRIPTION"'"}'
          curl -X PATCH \
          -H "Authorization: Bearer ${{ secrets.DOCKER_HUB_PASSWORD }}" \
          -H "Content-Type: application/json" \
          -d "$JSON_DATA" \
          "https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_HUB_LOGIN }}/${{ env.REPO_NAME }}/"

      - name: Add dockerhub label
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ['dockerhub']
              });
            } catch (error) {
              core.error('Failed to add label: ' + error.message);
              core.setFailed(error.message);
            }
