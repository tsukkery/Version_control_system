name: Version update runner

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches:
      - release


env:
  VERSION_FILE: ${{ github.workspace }}/version/version
  RELEASE_BRANCH: release
  MINOR: minor
  PATCH: patch
  VERSION_UPDATE_SCRIPT: .github/workflows/version_up.py
  REPO_NAME: ${{ github.event.repository.name }}
  PR_NUMBER: ${{ github.event.number }}
  REPO_URL: ${{ github.server_url }}/${{ github.repository }}
  DOCKER_REPO: ${{ secrets.DOCKERHUB_LOGIN }}/${{ github.repository.name }}
  CONTAINER_NAME: version_control_system
  
jobs:


  validate-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Parse branch name
        id: parse-data
        uses: tj-actions/branch-names@v8

      - name: Print info about actions
        run: |
          echo "EVENT_NAME   ${{github.event_name}}"
          echo "ACTION       ${{github.event.action}}"
          echo "IS_PULL_REQUEST_MERGED   ${{github.pull_request.merged}}"
          echo "CURRENT_BRANCH     ${{steps.parse-data.outputs.current_branch}}"
          echo "REF          ${{github.ref}}"
          echo "REF_NAME     ${{github.ref_name}}"
          echo "DEFAULT_BRANCH  ${{steps.parse-data.outputs.default_branch}}"

  
  tests:
    name: (TST)
    needs: validate-branch
    uses: tsukkery/Version_control_system/.github/workflows/test.yml@release
    with:
      version: alpha

  security:
    name: (SEC)
    needs: tests
    uses: tsukkery/Version_control_system/.github/workflows/security.yml@release

  update-version:
    name: (VER) Update version
    permissions:
      issues: write
      contents: write
      pull-requests: write
    needs: security
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{steps.output-tag.outputs.TAG_MSG}}
    steps:
      - name: Parse branch name
        id: parse-data
        uses: tj-actions/branch-names@v8
        
      - name: Ð¡heckout on [${{env.RELEASE}}]
        uses: actions/checkout@v3
        
      - name: Validate branch (feature/hotfix)
        id: validate_branch
        if: |
          contains(steps.parse-data.outputs.current_branch, 'feature') || 
          contains(steps.parse-data.outputs.current_branch, 'hotfix')
        run: echo "Valid branch"

      - name: Run minor version update script
        id: update-minor-version
        if: |
          contains(steps.parse-data.outputs.current_branch, 'feature')
        run: |
          echo "python ${VERSION_UPDATE_SCRIPT} ${MINOR} ${VERSION_FILE}"
          python ${VERSION_UPDATE_SCRIPT} ${MINOR} ${VERSION_FILE}

      - name: Run patch version update script
        id: update-patch-version
        if: |
          contains(steps.parse-data.outputs.current_branch, 'hotfix')
        run: |
          python ${VERSION_UPDATE_SCRIPT} ${PATCH} ${VERSION_FILE}

      - name: Set output tag
        id: output-tag
        run: |
          python ${VERSION_UPDATE_SCRIPT} read ${VERSION_FILE}
          TAG_MSG=$(python ${VERSION_UPDATE_SCRIPT} read ${VERSION_FILE})
          echo "$TAG_MSG"
          echo "TAG_MSG=${TAG_MSG}" >> $GITHUB_ENV
          echo "TAG_MSG=${TAG_MSG}" >> $GITHUB_OUTPUT
          
      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          
      - name: Commit and push changes
        run: |
          git add .
          git commit -m "Update version"
          git push origin ${RELEASE}

  log_changes:
    needs: update-version
    uses: tsukkery/version_control_system/.github/workflows/log_changes.yml@release
    with:
      update_tag: ${{ needs.update_version.outputs.new_version }}
      
  docker_push:
    needs: log_changes
    uses: tsukkery/version_control_system/.github/workflows/docker_push.yml@release
    with:
      update_tag: ${{ needs.update_version.outputs.new_version }}
    secrets: inherit
        
