name: Version update runner

on:
  pull_request:
    types: [closed]
    branches:
      - release
    paths-ignore:
      - '**/docs/**'

env:
  NAME_VERSION_FILE: ${{ github.workspace }}/version/version
  RELEASE_BRANCH: release
  MINOR: minor
  PATCH: patch
  VERSION_UP: .github/workflows/version_up.py
  REPO_NAME: ${{ github.event.repository.name }}
  PR_NUMBER: ${{ github.event.number }}
  URL_REPO: ${{ github.server_url }}/${{ github.repository }}
  DOCKER_REPO: ${{ secrets.DOCKER_HUB_LOGIN }}/${{env.REPO_NAME}}
  
jobs:


  validate-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Parse branch name
        id: parse-data
        uses: tj-actions/branch-names@v8

      - name: Print info about actions
        run: |
          echo "EVENT_NAME   ${{github.event_name}}"
          echo "ACTION       ${{github.event.action}}"
          echo "IS_PULL_REQUEST_MERGED   ${{github.pull_request.merged}}"
          echo "CURRENT_BRANCH     ${{steps.parse-data.outputs.current_branch}}"
          echo "REF          ${{github.ref}}"
          echo "REF_NAME     ${{github.ref_name}}"
          echo "DEFAULT_BRANCH  ${{steps.parse-data.outputs.default_branch}}"

  
  tests:
    name: (TST)
    needs: validate-branch
    uses: tsukkery/Version_control_system/.github/workflows/test.yml@release
    with:
      version: alpha

  security:
    name: (SEC)
    needs: tests
    uses: tsukkery/Version_control_system/.github/workflows/security.yml@release

  update-version:
    permissions:
      contents: write
    needs: security
    runs-on: ubuntu-latest
    steps:
      - name: Ð¡heckout on [${{env.RELEASE_BRACH}}] and v [${{env.tag}}]
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.13.2'

      - name: Run Python script
        run: |
          python .github/workflows/version_up.py patch
      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: Commit and push changes
        run: |
          git add .
          git commit -m "Update version"
          git push origin release

  docker-push:
    name: (CI) Docker push
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: update-version
    env:
      tag: ${{needs.update-version.outputs.tag}}
    steps:
      - name: Checkout on [${{ env.RELEASE_BRANCH }}]
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKER_HUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image to DockerHub
        id: docker-build-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_LOGIN }}/${{ env.REPO_NAME }}:latest
            ${{ secrets.DOCKERHUB_LOGIN }}/${{ env.REPO_NAME }}:v${{ env.tag }}

      - name: Set DockerHub label
        if: success()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['DockerHub']
            })
        
